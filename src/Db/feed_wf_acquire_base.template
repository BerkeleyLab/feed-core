# waveform buffer handling
#
# Write channel select mask to shell_#_dsp_chan_keep
#
# Write one to bit N in circle_buf_flip to enable acquisition of channel N
#
# Wait for bit N in llrf_circle_ready to be set
#
# Macros
#  BASE - Record name prefix
#  NAME - FEED Device name
#  BIT  - Channel bit number (0 is first channel)
#  MASK - Channel bit mask (1 is first channel)
#  SIZE - Max signal length (eg. 8192)

# channel mask logic

record(mbboDirect, "$(BASE)Mask-SP") {
    field(DESC, "Channel selection bitmask")
    field(OUT,  "$(BASE)Mask2_ PP")
    field(TPRO, "$(TPRO=0)")
}

record(longout, "$(BASE)Mask2_") {
    field(DTYP, "FEED Register Write")
    field(OUT , "@name=$(NAME) reg=shell_$(BIT)_dsp_chan_keep")
    field(FLNK, "$(BASE)Mask3_")
    field(TPRO, "$(TPRO=0)")
}

record(aSub, "$(BASE)Mask3_") {
    field(SNAM, "asub_split_bits")
    field(FTA , "LONG")
    field(INPA, "$(BASE)Mask2_ NPP MSI")
    field(FTVA, "LONG")
    field(FTVB, "LONG")
    field(FTVC, "LONG")
    field(FTVD, "LONG")
    field(FTVE, "LONG")
    field(FTVF, "LONG")
    field(FTVG, "LONG")
    field(FTVH, "LONG")
    field(FTVI, "LONG")
    field(FTVJ, "LONG")
    field(FTVK, "LONG")
    field(FTVL, "LONG")
    field(FTVM, "LONG")
    field(FTVN, "LONG")
    # individual signals monitor one of VALB -> VALN
    # to detect config changes
    field(EFLG, "ALWAYS")
}

# acquisition trigger logic

record(bo, "$(BASE)Mode-Sel") {
    field(ZNAM, "Single")
    field(ONAM, "Normal")
    field(VAL , "0")
    field(PINI, "YES")
    field(FLNK, "$(BASE)Acq-Cmd")
}

record(ao, "$(BASE)HldOff-SP") {
    field(DESC, "re-arm holdoff time")
    field(OUT , "$(BASE)AcqDly_.ODLY NPP")
    field(DRVH, "5.0")
    field(DRVL, "0.1")
    field(VAL , "1.0")
    field(EGU , "s")
    field(PREC, "2")
    field(PINI, "YES")
}

record(bo, "$(BASE)Acq-Cmd") {
    field(DESC, "Start aquisition")
    field(ZNAM, "Acquire")
    field(ONAM, "Acquire")
    field(FLNK, "$(BASE)Acq-Cmd_")
    field(TPRO, "$(TPRO=0)")
}

# write $(MASK) to reg circle_buf_flip
record(longout, "$(BASE)Acq-Cmd_") {
    field(DTYP, "FEED Register Write")
    field(OUT , "@name=$(NAME) reg=circle_buf_flip")
    field(VAL , "$(MASK)")
    field(FLNK, "$(BASE)Rdy-I_")
    field(TPRO, "$(TPRO=0)")
}

# wait for value & $(MASK) == $(MASK) for reg llrf_circle_ready
record(bo, "$(BASE)Rdy-I_") {
    field(DTYP, "FEED Register Watch")
    field(OUT , "@name=$(NAME) retry=0.1 reg=llrf_circle_ready mask=$(MASK) value=$(MASK)")
    field(FLNK, "$(BASE)CircRaw_")
    field(TPRO, "$(TPRO=0)")
}

# actual readback of sample buffer
record(longin, "$(BASE)CircRaw_") {
    field(SDIS, "$(BASE)Rdy-I_ MSI")
    field(DISV, "-42")

    field(DTYP, "FEED Register Read")
    field(DESC, "$(DESC=Reg $(NAME))")
    field(INP , "@name=$(NAME) reg=shell_$(BIT)_circle_data")
    field(TSE , "-2")
    field(FLNK, "$(BASE)SlowRaw_")
    field(TPRO, "$(TPRO=0)")
}

# actual readback of aggregated data block
record(longin, "$(BASE)SlowRaw_") {
    field(DTYP, "FEED Register Read")
    field(DESC, "$(DESC=Reg $(NAME))")
    field(INP , "@name=$(NAME) reg=shell_$(BIT)_slow_data")
    field(TSE , "-2")
    field(FLNK, "$(BASE)AcqCnt-I")
    field(TPRO, "$(TPRO=0)")
}

# individual signals monitor this to detect new data
record(calc, "$(BASE)AcqCnt-I") {
    field(SDIS, "$(BASE)Rdy-I_ MSI")
    field(DISV, "-42")
    field(INPA, "$(BASE)AcqCnt-I")
    field(CALC, "A+1")
    field(FLNK, "$(BASE)AcqDly_")
    field(TPRO, "$(TPRO=0)")
}

record(calc, "$(BASE)AcqRate-I") {
    field(SCAN, "10 second")
    field(INPA, "$(BASE)AcqCnt-I")
    field(CALC, "C:=A-B;B:=A;C/10")
    field(EGU , "Hz")
    field(PREC, "2")
}

record(calcout, "$(BASE)AcqDly_") {
    field(SDIS, "$(BASE)Mode-Sel")
    field(DISV, "0") # disable when Single
    field(CALC, "0")
    field(ODLY, "1.0")
    field(OUT , "$(BASE)Acq-Cmd PP")
    field(TPRO, "$(TPRO=0)")
}
