# processing of a pair of _signal.template as an I/Q pair
#
# Macros:
#  PREF - Prefix of our records
#  BASE - Record name prefix used with corresponding feed_wf_acquire_base.template
#  SIGI - Prefix of I records (see _signal.template)
#  SIGQ - Prefix of Q records (see _signal.template)
#  BITI - Bit field letter for I (in _base.template)
#  BITQ - Bit field letter for Q (in _base.template)
#  SIZE - Max signal length (eg. 16384)
#

record(bo, "$(PREF)ENABLE") {
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
  field(OUT , "$(PREF)ENABLE_FOUT_ PP")
  field(VAL , "1") # initially Enable
  field(PINI, "YES")
}

record(dfanout, "$(PREF)ENABLE_FOUT_") {
  # MASK is async, so only PP after setting the second bit
  field(OUTA, "$(BASE)MASK.B$(BITI)")
  field(OUTB, "$(BASE)MASK.B$(BITQ) PP")
}

# alias records in _signal.template
alias("$(SIGI)TWF", "$(PREF)TWF")
alias("$(SIGI)WF", "$(PREF)IWF")
alias("$(SIGQ)WF", "$(PREF)QWF")
alias("$(SIGI)SCALE", "$(PREF)ISCALE")
alias("$(SIGQ)SCALE", "$(PREF)QSCALE")
alias("$(SIGI)NORD", "$(PREF)NORD")

# inject info tags into records from _signal.template
record(aai, "$(SIGI)WF") {
    info(feed:info:enable$(CHANI), "$(PREF)ENABLE")
}
record(aai, "$(SIGQ)WF") {
    info(feed:info:enable$(CHANQ), "$(PREF)ENABLE")
}

# alias our records for use like _signal.template
alias("$(PREF)ENABLE", "$(SIGI)ENABLE")
alias("$(PREF)ENABLE", "$(SIGQ)ENABLE")

# scaling factor from amplitude squared to power
#  (use I/Q scaling to determine amplitude scaling)
record(ao, "$(PREF)PWRSCALE") {
    field(VAL , "1.0")
    field(PREC, "9")
    field(PINI, "YES")
    info(autosaveFields_pass0, "VAL")
}

# Arbitrary offset added to phase (zero angle)
record(ao, "$(PREF)ZRANGLE") {
    field(VAL , "0.0")
    field(PREC, "2")
    field(EGU , "deg")
    field(PINI, "YES")
    info(autosaveFields_pass0, "VAL")
}

# Rotate I/Q for display purposes
# Used for IWFDISP, QWFDISP
record(ao, "$(PREF)DISPANGLE") {
    field(VAL , "0.0")
    field(PREC, "2")
    field(EGU , "deg")
    field(PINI, "YES")
    info(autosaveFields_pass0, "VAL")
}


# FLNK'd from _signal.template of SIGQ
record(aSub, "$(PREF)AP_CALC_") {
  field(SNAM, "IQ2AP")
  field(FTA , "DOUBLE")
  field(FTB , "DOUBLE")
  field(FTC , "DOUBLE")
  field(FTD , "DOUBLE")
  field(FTVA ,"DOUBLE")
  field(FTVB ,"DOUBLE")
  field(FTVD ,"DOUBLE")
  field(FTVE ,"DOUBLE")
  field(NOA , "$(SIZE)")
  field(NOB , "$(SIZE)")
  field(NOVA, "$(SIZE)")
  field(NOVB, "$(SIZE)")
  field(NOVC, "$(SIZE)")
  field(NOVD, "$(SIZE)")
  field(NOVE, "$(SIZE)")
  field(INPA, "$(PREF)IWF MSI NPP")
  field(INPB, "$(PREF)QWF MSI NPP")
  field(INPC, "$(PREF)PWRSCALE MSI NPP")
  field(INPD, "$(PREF)ZRANGLE MSI NPP")
  field(INPE, "$(PREF)DISPANGLE MSI NPP")
  field(INPF, "$(PWRCONV=0)")
  field(OUTA, "$(PREF)AWF MSI PP")
  field(OUTB, "$(PREF)PWF MSI PP")
  field(OUTC, "$(PREF)PWRWF MSI PP")
  field(OUTD, "$(PREF)IWFDISP MSI PP")
  field(OUTE, "$(PREF)QWFDISP MSI PP")
  field(FLNK, "$(FLNK=)") # to external logic, eg. waveform stats
  field(TSEL, "$(PREF)IWF.TIME")
}

record(aai, "$(PREF)AWF") {
  field(DESC, "Amplitude")
  field(FTVL, "DOUBLE")
  field(NELM, "$(SIZE)")
  field(TSEL, "$(PREF)IWF.TIME")
}

record(aai, "$(PREF)PWRWF") {
  field(DESC, "Power")
  field(FTVL, "DOUBLE")
  field(NELM, "$(SIZE)")
  field(TSEL, "$(PREF)IWF.TIME")
}

record(aai, "$(PREF)PWF") {
  field(DESC, "Phase")
  field(EGU , "deg.")
  field(FTVL, "DOUBLE")
  field(NELM, "$(SIZE)")
  field(FLNK, "$(PREF)PWF_CALC_")
  field(TSEL, "$(PREF)IWF.TIME")
}

record(aSub, "$(PREF)PWF_CALC_") {
  field(SNAM, "Phase Unwrap")
  field(FTA , "DOUBLE")
  field(NOA , "$(SIZE)")
  field(NOVA, "$(SIZE)")
  field(INPA, "$(PREF)PWF MS NPP")
  field(INPB, "160")
  field(OUTA, "$(PREF)UPWF MS PP")
  field(TSEL, "$(PREF)IWF.TIME")
}

record(aai, "$(PREF)UPWF") {
  field(DESC, "Unwrapped Phase")
  field(EGU , "deg.")
  field(FTVL, "DOUBLE")
  field(NELM, "$(SIZE)")
  field(TSEL, "$(PREF)IWF.TIME")
}

record(aai, "$(PREF)IWFDISP") {
  field(DESC, "Rotated I")
  field(FTVL, "DOUBLE")
  field(NELM, "$(SIZE)")
  field(TSEL, "$(PREF)IWF.TIME")
}

record(aai, "$(PREF)QWFDISP") {
  field(DESC, "Rotated Q")
  field(FTVL, "DOUBLE")
  field(NELM, "$(SIZE)")
  field(TSEL, "$(PREF)IWF.TIME")
}

